<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>少年码上记</title>
    <link>https://dinggd.com/</link>
    <description>Recent content on 少年码上记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 08 Jan 2021 14:37:05 +0800</lastBuildDate><atom:link href="https://dinggd.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>结构体嵌套造成的编译资源消耗问题</title>
      <link>https://dinggd.com/post/%E7%BB%93%E6%9E%84%E4%BD%93%E5%B5%8C%E5%A5%97%E9%80%A0%E6%88%90%E7%9A%84%E7%BC%96%E8%AF%91%E8%B5%84%E6%BA%90%E6%B6%88%E8%80%97%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 08 Jan 2021 14:37:05 +0800</pubDate>
      
      <guid>https://dinggd.com/post/%E7%BB%93%E6%9E%84%E4%BD%93%E5%B5%8C%E5%A5%97%E9%80%A0%E6%88%90%E7%9A%84%E7%BC%96%E8%AF%91%E8%B5%84%E6%BA%90%E6%B6%88%E8%80%97%E9%97%AE%E9%A2%98/</guid>
      <description>何为结构体嵌套 golang 中允许定义不带名称的结构体成员，只需要指定类型即可，这种结构体成员称作匿名成员。将一个命名结构体当做另一个结构体类型的匿名成员使用，即为结构体嵌套。如下示例中，Circle 和 Wheel都拥有一个匿名成员，Point 被嵌套到 Circle 中，Circle 被嵌套到 Wheel 中。 1 2 3 4 5</description>
    </item>
    
    <item>
      <title>项目中应该禁用fallthrough</title>
      <link>https://dinggd.com/post/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%BA%94%E8%AF%A5%E7%A6%81%E7%94%A8fallthrough/</link>
      <pubDate>Wed, 06 Jan 2021 13:12:01 +0800</pubDate>
      
      <guid>https://dinggd.com/post/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%BA%94%E8%AF%A5%E7%A6%81%E7%94%A8fallthrough/</guid>
      <description>fallthrough的用途 在其他语法（非Go，C，PHP）中，switch 有一个特定的现象，就是向下穿越，指的是一旦一个分支 case 满足，则后续分支代码都会被执行。而Go语言中，默认分支执行完毕，switch 执行完毕。使用 fallthrough 语法，可以达到穿越下一个 case 分支的目的。 fallthrough 需要出现在分支语句块</description>
    </item>
    
    <item>
      <title>浅述TODO的作用</title>
      <link>https://dinggd.com/post/%E6%B5%85%E8%BF%B0TODO%E7%9A%84%E4%BD%9C%E7%94%A8/</link>
      <pubDate>Sun, 03 Jan 2021 22:31:39 +0800</pubDate>
      
      <guid>https://dinggd.com/post/%E6%B5%85%E8%BF%B0TODO%E7%9A%84%E4%BD%9C%E7%94%A8/</guid>
      <description>前言 很多人都知道，代码中待办的事项会用TODO注释，标记还未完成的待办项。但事实上，很多项目中TODO已经烂大街了。我们后端项目中，仅仅游戏业务代码中就存在近百处TODO（上线之前曾经治过，只是又复发了），并且还在持续增加中。长此以往下去，TODO已经和常规注释没有差别了。 TOD</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://dinggd.com/about/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dinggd.com/about/</guid>
      <description>昵称：东东 英文名：Garey 自我介绍：一名少年程序猿，Golang开发者，专注于手游服务器开发，致力于将开发中遇到的技术点滴记录下来&amp;hellip; Email：garey.ding@gmail.com 微信号： 公众号：</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://dinggd.com/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dinggd.com/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>https://dinggd.com/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dinggd.com/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
